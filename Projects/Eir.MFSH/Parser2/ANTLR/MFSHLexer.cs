//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MFSHLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MFSH.Parser2 {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class MFSHLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		MFSH=1, TEXT=2, CR=3, APPLY=4, END=5, INCOMPATIBLE=6, MACRO=7, ONCE=8, 
		STRING=9, MULTILINE_STRING=10, OPAR=11, COMMA=12, CPAR=13, GT=14, NAME=15, 
		MFSHExit=16, MFSHCont=17, MFSHCR=18, MFSH_SPACE=19;
	public const int
		MFSHMode=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "MFSHMode"
	};

	public static readonly string[] ruleNames = {
		"MFSH", "TEXT", "CR", "APPLY", "END", "INCOMPATIBLE", "MACRO", "ONCE", 
		"STRING", "MULTILINE_STRING", "OPAR", "COMMA", "CPAR", "GT", "NAME", "MFSHExit", 
		"MFSHCont", "MFSHCR", "MFSH_SPACE"
	};


	public MFSHLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MFSHLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, "'apply'", "'end'", "'incompatible'", "'macro'", 
		"'once'", null, null, "'('", "','", "')'", "'>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "MFSH", "TEXT", "CR", "APPLY", "END", "INCOMPATIBLE", "MACRO", "ONCE", 
		"STRING", "MULTILINE_STRING", "OPAR", "COMMA", "CPAR", "GT", "NAME", "MFSHExit", 
		"MFSHCont", "MFSHCR", "MFSH_SPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MFSHLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MFSHLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x15', '\xC2', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x3', '\x2', '\a', 
		'\x2', ',', '\n', '\x2', '\f', '\x2', '\xE', '\x2', '/', '\v', '\x2', 
		'\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', 
		'\a', '\x3', '\x36', '\n', '\x3', '\f', '\x3', '\xE', '\x3', '\x39', '\v', 
		'\x3', '\x3', '\x3', '\a', '\x3', '<', '\n', '\x3', '\f', '\x3', '\xE', 
		'\x3', '?', '\v', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\a', '\n', 'm', '\n', '\n', '\f', 
		'\n', '\xE', '\n', 'p', '\v', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\a', '\v', 'y', '\n', 
		'\v', '\f', '\v', '\xE', '\v', '|', '\v', '\v', '\x3', '\v', '\x3', '\v', 
		'\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x6', '\x10', '\x8C', '\n', '\x10', '\r', '\x10', '\xE', 
		'\x10', '\x8D', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x6', '\x10', 
		'\x93', '\n', '\x10', '\r', '\x10', '\xE', '\x10', '\x94', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x6', '\x10', '\x9B', '\n', 
		'\x10', '\r', '\x10', '\xE', '\x10', '\x9C', '\x3', '\x10', '\x5', '\x10', 
		'\xA0', '\n', '\x10', '\x3', '\x11', '\x3', '\x11', '\a', '\x11', '\xA4', 
		'\n', '\x11', '\f', '\x11', '\xE', '\x11', '\xA7', '\v', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', 
		'\x12', '\a', '\x12', '\xAF', '\n', '\x12', '\f', '\x12', '\xE', '\x12', 
		'\xB2', '\v', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x14', '\x6', '\x14', '\xBD', '\n', '\x14', '\r', '\x14', '\xE', '\x14', 
		'\xBE', '\x3', '\x14', '\x3', '\x14', '\x3', 'z', '\x2', '\x15', '\x4', 
		'\x3', '\x6', '\x4', '\b', '\x5', '\n', '\x6', '\f', '\a', '\xE', '\b', 
		'\x10', '\t', '\x12', '\n', '\x14', '\v', '\x16', '\f', '\x18', '\r', 
		'\x1A', '\xE', '\x1C', '\xF', '\x1E', '\x10', ' ', '\x11', '\"', '\x12', 
		'$', '\x13', '&', '\x14', '(', '\x15', '\x4', '\x2', '\x3', '\b', '\x4', 
		'\x2', '\v', '\v', '\"', '\"', '\x4', '\x2', '\f', '\f', '%', '%', '\x6', 
		'\x2', '\f', '\f', '\xF', '\xF', '$', '$', '^', '^', '\x4', '\x2', '\x43', 
		'\\', '\x63', '|', '\x5', '\x2', '\x32', ';', '\x43', '\\', '\x63', '|', 
		'\x3', '\x2', '%', '%', '\x2', '\xCE', '\x2', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\n', '\x3', '\x2', '\x2', '\x2', '\x3', '\f', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\xE', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x10', '\x3', '\x2', '\x2', '\x2', '\x3', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x14', '\x3', '\x2', '\x2', '\x2', '\x3', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x18', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x3', '(', 
		'\x3', '\x2', '\x2', '\x2', '\x4', '-', '\x3', '\x2', '\x2', '\x2', '\x6', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\b', '\x42', '\x3', '\x2', '\x2', 
		'\x2', '\n', '\x46', '\x3', '\x2', '\x2', '\x2', '\f', 'L', '\x3', '\x2', 
		'\x2', '\x2', '\xE', 'P', '\x3', '\x2', '\x2', '\x2', '\x10', ']', '\x3', 
		'\x2', '\x2', '\x2', '\x12', '\x63', '\x3', '\x2', '\x2', '\x2', '\x14', 
		'h', '\x3', '\x2', '\x2', '\x2', '\x16', 's', '\x3', '\x2', '\x2', '\x2', 
		'\x18', '\x81', '\x3', '\x2', '\x2', '\x2', '\x1A', '\x83', '\x3', '\x2', 
		'\x2', '\x2', '\x1C', '\x85', '\x3', '\x2', '\x2', '\x2', '\x1E', '\x87', 
		'\x3', '\x2', '\x2', '\x2', ' ', '\x9F', '\x3', '\x2', '\x2', '\x2', '\"', 
		'\xA1', '\x3', '\x2', '\x2', '\x2', '$', '\xAC', '\x3', '\x2', '\x2', 
		'\x2', '&', '\xB7', '\x3', '\x2', '\x2', '\x2', '(', '\xBC', '\x3', '\x2', 
		'\x2', '\x2', '*', ',', '\t', '\x2', '\x2', '\x2', '+', '*', '\x3', '\x2', 
		'\x2', '\x2', ',', '/', '\x3', '\x2', '\x2', '\x2', '-', '+', '\x3', '\x2', 
		'\x2', '\x2', '-', '.', '\x3', '\x2', '\x2', '\x2', '.', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '/', '-', '\x3', '\x2', '\x2', '\x2', '\x30', '\x31', 
		'\a', '%', '\x2', '\x2', '\x31', '\x32', '\x3', '\x2', '\x2', '\x2', '\x32', 
		'\x33', '\b', '\x2', '\x2', '\x2', '\x33', '\x5', '\x3', '\x2', '\x2', 
		'\x2', '\x34', '\x36', '\t', '\x2', '\x2', '\x2', '\x35', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x36', '\x39', '\x3', '\x2', '\x2', '\x2', '\x37', 
		'\x35', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\x38', '=', '\x3', '\x2', '\x2', '\x2', '\x39', '\x37', '\x3', 
		'\x2', '\x2', '\x2', ':', '<', '\n', '\x3', '\x2', '\x2', ';', ':', '\x3', 
		'\x2', '\x2', '\x2', '<', '?', '\x3', '\x2', '\x2', '\x2', '=', ';', '\x3', 
		'\x2', '\x2', '\x2', '=', '>', '\x3', '\x2', '\x2', '\x2', '>', '@', '\x3', 
		'\x2', '\x2', '\x2', '?', '=', '\x3', '\x2', '\x2', '\x2', '@', '\x41', 
		'\a', '\f', '\x2', '\x2', '\x41', '\a', '\x3', '\x2', '\x2', '\x2', '\x42', 
		'\x43', '\a', '\xF', '\x2', '\x2', '\x43', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\x44', '\x45', '\b', '\x4', '\x3', '\x2', '\x45', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x46', 'G', '\a', '\x63', '\x2', '\x2', 'G', 'H', 
		'\a', 'r', '\x2', '\x2', 'H', 'I', '\a', 'r', '\x2', '\x2', 'I', 'J', 
		'\a', 'n', '\x2', '\x2', 'J', 'K', '\a', '{', '\x2', '\x2', 'K', '\v', 
		'\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', 'g', '\x2', '\x2', 'M', 'N', 
		'\a', 'p', '\x2', '\x2', 'N', 'O', '\a', '\x66', '\x2', '\x2', 'O', '\r', 
		'\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\a', 'k', '\x2', '\x2', 'Q', 'R', 
		'\a', 'p', '\x2', '\x2', 'R', 'S', '\a', '\x65', '\x2', '\x2', 'S', 'T', 
		'\a', 'q', '\x2', '\x2', 'T', 'U', '\a', 'o', '\x2', '\x2', 'U', 'V', 
		'\a', 'r', '\x2', '\x2', 'V', 'W', '\a', '\x63', '\x2', '\x2', 'W', 'X', 
		'\a', 'v', '\x2', '\x2', 'X', 'Y', '\a', 'k', '\x2', '\x2', 'Y', 'Z', 
		'\a', '\x64', '\x2', '\x2', 'Z', '[', '\a', 'n', '\x2', '\x2', '[', '\\', 
		'\a', 'g', '\x2', '\x2', '\\', '\xF', '\x3', '\x2', '\x2', '\x2', ']', 
		'^', '\a', 'o', '\x2', '\x2', '^', '_', '\a', '\x63', '\x2', '\x2', '_', 
		'`', '\a', '\x65', '\x2', '\x2', '`', '\x61', '\a', 't', '\x2', '\x2', 
		'\x61', '\x62', '\a', 'q', '\x2', '\x2', '\x62', '\x11', '\x3', '\x2', 
		'\x2', '\x2', '\x63', '\x64', '\a', 'q', '\x2', '\x2', '\x64', '\x65', 
		'\a', 'p', '\x2', '\x2', '\x65', '\x66', '\a', '\x65', '\x2', '\x2', '\x66', 
		'g', '\a', 'g', '\x2', '\x2', 'g', '\x13', '\x3', '\x2', '\x2', '\x2', 
		'h', 'n', '\a', '$', '\x2', '\x2', 'i', 'm', '\n', '\x4', '\x2', '\x2', 
		'j', 'k', '\a', '^', '\x2', '\x2', 'k', 'm', '\v', '\x2', '\x2', '\x2', 
		'l', 'i', '\x3', '\x2', '\x2', '\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 
		'm', 'p', '\x3', '\x2', '\x2', '\x2', 'n', 'l', '\x3', '\x2', '\x2', '\x2', 
		'n', 'o', '\x3', '\x2', '\x2', '\x2', 'o', 'q', '\x3', '\x2', '\x2', '\x2', 
		'p', 'n', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\a', '$', '\x2', '\x2', 
		'r', '\x15', '\x3', '\x2', '\x2', '\x2', 's', 't', '\a', '$', '\x2', '\x2', 
		't', 'u', '\a', '$', '\x2', '\x2', 'u', 'v', '\a', '$', '\x2', '\x2', 
		'v', 'z', '\x3', '\x2', '\x2', '\x2', 'w', 'y', '\v', '\x2', '\x2', '\x2', 
		'x', 'w', '\x3', '\x2', '\x2', '\x2', 'y', '|', '\x3', '\x2', '\x2', '\x2', 
		'z', '{', '\x3', '\x2', '\x2', '\x2', 'z', 'x', '\x3', '\x2', '\x2', '\x2', 
		'{', '}', '\x3', '\x2', '\x2', '\x2', '|', 'z', '\x3', '\x2', '\x2', '\x2', 
		'}', '~', '\a', '$', '\x2', '\x2', '~', '\x7F', '\a', '$', '\x2', '\x2', 
		'\x7F', '\x80', '\a', '$', '\x2', '\x2', '\x80', '\x17', '\x3', '\x2', 
		'\x2', '\x2', '\x81', '\x82', '\a', '*', '\x2', '\x2', '\x82', '\x19', 
		'\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\a', '.', '\x2', '\x2', '\x84', 
		'\x1B', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\a', '+', '\x2', 
		'\x2', '\x86', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\a', 
		'@', '\x2', '\x2', '\x88', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x89', 
		'\x8B', '\t', '\x5', '\x2', '\x2', '\x8A', '\x8C', '\t', '\x6', '\x2', 
		'\x2', '\x8B', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8D', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x8E', '\xA0', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x90', '\a', '&', '\x2', '\x2', '\x90', '\x92', '\t', 
		'\x5', '\x2', '\x2', '\x91', '\x93', '\t', '\x6', '\x2', '\x2', '\x92', 
		'\x91', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\x3', '\x2', '\x2', 
		'\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\x3', 
		'\x2', '\x2', '\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', '\x96', 
		'\xA0', '\a', '&', '\x2', '\x2', '\x97', '\x98', '\a', '\'', '\x2', '\x2', 
		'\x98', '\x9A', '\t', '\x5', '\x2', '\x2', '\x99', '\x9B', '\t', '\x6', 
		'\x2', '\x2', '\x9A', '\x99', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x9C', 
		'\x3', '\x2', '\x2', '\x2', '\x9C', '\x9A', '\x3', '\x2', '\x2', '\x2', 
		'\x9C', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\x3', '\x2', 
		'\x2', '\x2', '\x9E', '\xA0', '\a', '\'', '\x2', '\x2', '\x9F', '\x89', 
		'\x3', '\x2', '\x2', '\x2', '\x9F', '\x8F', '\x3', '\x2', '\x2', '\x2', 
		'\x9F', '\x97', '\x3', '\x2', '\x2', '\x2', '\xA0', '!', '\x3', '\x2', 
		'\x2', '\x2', '\xA1', '\xA5', '\a', '\f', '\x2', '\x2', '\xA2', '\xA4', 
		'\t', '\x2', '\x2', '\x2', '\xA3', '\xA2', '\x3', '\x2', '\x2', '\x2', 
		'\xA4', '\xA7', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA3', '\x3', '\x2', 
		'\x2', '\x2', '\xA5', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA8', 
		'\x3', '\x2', '\x2', '\x2', '\xA7', '\xA5', '\x3', '\x2', '\x2', '\x2', 
		'\xA8', '\xA9', '\n', '\a', '\x2', '\x2', '\xA9', '\xAA', '\x3', '\x2', 
		'\x2', '\x2', '\xAA', '\xAB', '\b', '\x11', '\x4', '\x2', '\xAB', '#', 
		'\x3', '\x2', '\x2', '\x2', '\xAC', '\xB0', '\a', '\f', '\x2', '\x2', 
		'\xAD', '\xAF', '\t', '\x2', '\x2', '\x2', '\xAE', '\xAD', '\x3', '\x2', 
		'\x2', '\x2', '\xAF', '\xB2', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xAE', 
		'\x3', '\x2', '\x2', '\x2', '\xB0', '\xB1', '\x3', '\x2', '\x2', '\x2', 
		'\xB1', '\xB3', '\x3', '\x2', '\x2', '\x2', '\xB2', '\xB0', '\x3', '\x2', 
		'\x2', '\x2', '\xB3', '\xB4', '\a', '%', '\x2', '\x2', '\xB4', '\xB5', 
		'\x3', '\x2', '\x2', '\x2', '\xB5', '\xB6', '\b', '\x12', '\x3', '\x2', 
		'\xB6', '%', '\x3', '\x2', '\x2', '\x2', '\xB7', '\xB8', '\a', '\xF', 
		'\x2', '\x2', '\xB8', '\xB9', '\x3', '\x2', '\x2', '\x2', '\xB9', '\xBA', 
		'\b', '\x13', '\x3', '\x2', '\xBA', '\'', '\x3', '\x2', '\x2', '\x2', 
		'\xBB', '\xBD', '\t', '\x2', '\x2', '\x2', '\xBC', '\xBB', '\x3', '\x2', 
		'\x2', '\x2', '\xBD', '\xBE', '\x3', '\x2', '\x2', '\x2', '\xBE', '\xBC', 
		'\x3', '\x2', '\x2', '\x2', '\xBE', '\xBF', '\x3', '\x2', '\x2', '\x2', 
		'\xBF', '\xC0', '\x3', '\x2', '\x2', '\x2', '\xC0', '\xC1', '\b', '\x14', 
		'\x3', '\x2', '\xC1', ')', '\x3', '\x2', '\x2', '\x2', '\x11', '\x2', 
		'\x3', '-', '\x37', '=', 'l', 'n', 'z', '\x8D', '\x94', '\x9C', '\x9F', 
		'\xA5', '\xB0', '\xBE', '\x5', '\a', '\x3', '\x2', '\b', '\x2', '\x2', 
		'\x6', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MFSH.Parser2
