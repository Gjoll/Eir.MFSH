//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MFSHLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MFSH {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class MFSHLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		MSTART=1, LINE=2, BLANKLINE=3, LASTLINE=4, CR=5, Err=6, MINCLUDE=7, MDEFINE=8, 
		MENDDEF=9, MAPPLY=10, MEND=11, MSTRING=12, MOPAR=13, MCOMMA=14, MCPAR=15, 
		MPNAME=16, MWS=17, MErr=18;
	public const int
		MFSH=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "MFSH"
	};

	public static readonly string[] ruleNames = {
		"MSTART", "LINE", "BLANKLINE", "LASTLINE", "CR", "Err", "MINCLUDE", "MDEFINE", 
		"MENDDEF", "MAPPLY", "MEND", "MSTRING", "MOPAR", "MCOMMA", "MCPAR", "MPNAME", 
		"MWS", "MErr"
	};


	public MFSHLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MFSHLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'\r'", null, "'include'", "'define'", "'enddef'", 
		"'apply'", null, null, "'('", "','", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "MSTART", "LINE", "BLANKLINE", "LASTLINE", "CR", "Err", "MINCLUDE", 
		"MDEFINE", "MENDDEF", "MAPPLY", "MEND", "MSTRING", "MOPAR", "MCOMMA", 
		"MCPAR", "MPNAME", "MWS", "MErr"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MFSHLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MFSHLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\xAA', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x3', '\x2', '\a', '\x2', '*', '\n', '\x2', '\f', 
		'\x2', '\xE', '\x2', '-', '\v', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\a', '\x3', '\x34', '\n', '\x3', '\f', 
		'\x3', '\xE', '\x3', '\x37', '\v', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\a', '\x3', ';', '\n', '\x3', '\f', '\x3', '\xE', '\x3', '>', '\v', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\a', '\x4', '\x43', '\n', '\x4', 
		'\f', '\x4', '\xE', '\x4', '\x46', '\v', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x5', '\x6', '\x5', 'K', '\n', '\x5', '\r', '\x5', '\xE', '\x5', 
		'L', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\a', '\f', 'u', '\n', '\f', '\f', '\f', '\xE', '\f', 'x', '\v', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\a', '\r', '\x80', '\n', '\r', '\f', '\r', '\xE', '\r', '\x83', 
		'\v', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', 
		'\x11', '\x6', '\x11', '\x8F', '\n', '\x11', '\r', '\x11', '\xE', '\x11', 
		'\x90', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x6', '\x11', '\x96', 
		'\n', '\x11', '\r', '\x11', '\xE', '\x11', '\x97', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x6', '\x11', '\x9E', '\n', '\x11', 
		'\r', '\x11', '\xE', '\x11', '\x9F', '\x3', '\x11', '\x5', '\x11', '\xA3', 
		'\n', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', 
		'\x3', '\x13', '\x3', '\x13', '\x2', '\x2', '\x14', '\x4', '\x3', '\x6', 
		'\x4', '\b', '\x5', '\n', '\x6', '\f', '\a', '\xE', '\b', '\x10', '\t', 
		'\x12', '\n', '\x14', '\v', '\x16', '\f', '\x18', '\r', '\x1A', '\xE', 
		'\x1C', '\xF', '\x1E', '\x10', ' ', '\x11', '\"', '\x12', '$', '\x13', 
		'&', '\x14', '\x4', '\x2', '\x3', '\t', '\x4', '\x2', '\v', '\v', '\"', 
		'\"', '\x3', '\x2', '%', '%', '\x3', '\x2', '\f', '\f', '\x3', '\x2', 
		'$', '$', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x5', '\x2', '\x32', 
		';', '\x43', '\\', '\x63', '|', '\x6', '\x2', '\v', '\f', '\xF', '\xF', 
		'\"', '\"', '%', '%', '\x2', '\xB4', '\x2', '\x4', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x6', '\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\n', '\x3', '\x2', '\x2', '\x2', '\x2', '\f', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\xE', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x10', '\x3', '\x2', '\x2', '\x2', '\x3', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x14', '\x3', '\x2', '\x2', '\x2', '\x3', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x18', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1C', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x4', '+', 
		'\x3', '\x2', '\x2', '\x2', '\x6', '\x35', '\x3', '\x2', '\x2', '\x2', 
		'\b', '\x44', '\x3', '\x2', '\x2', '\x2', '\n', 'J', '\x3', '\x2', '\x2', 
		'\x2', '\f', 'P', '\x3', '\x2', '\x2', '\x2', '\xE', 'T', '\x3', '\x2', 
		'\x2', '\x2', '\x10', 'V', '\x3', '\x2', '\x2', '\x2', '\x12', '^', '\x3', 
		'\x2', '\x2', '\x2', '\x14', '\x65', '\x3', '\x2', '\x2', '\x2', '\x16', 
		'l', '\x3', '\x2', '\x2', '\x2', '\x18', 'r', '\x3', '\x2', '\x2', '\x2', 
		'\x1A', '}', '\x3', '\x2', '\x2', '\x2', '\x1C', '\x86', '\x3', '\x2', 
		'\x2', '\x2', '\x1E', '\x88', '\x3', '\x2', '\x2', '\x2', ' ', '\x8A', 
		'\x3', '\x2', '\x2', '\x2', '\"', '\xA2', '\x3', '\x2', '\x2', '\x2', 
		'$', '\xA4', '\x3', '\x2', '\x2', '\x2', '&', '\xA8', '\x3', '\x2', '\x2', 
		'\x2', '(', '*', '\t', '\x2', '\x2', '\x2', ')', '(', '\x3', '\x2', '\x2', 
		'\x2', '*', '-', '\x3', '\x2', '\x2', '\x2', '+', ')', '\x3', '\x2', '\x2', 
		'\x2', '+', ',', '\x3', '\x2', '\x2', '\x2', ',', '.', '\x3', '\x2', '\x2', 
		'\x2', '-', '+', '\x3', '\x2', '\x2', '\x2', '.', '/', '\a', '%', '\x2', 
		'\x2', '/', '\x30', '\x3', '\x2', '\x2', '\x2', '\x30', '\x31', '\b', 
		'\x2', '\x2', '\x2', '\x31', '\x5', '\x3', '\x2', '\x2', '\x2', '\x32', 
		'\x34', '\t', '\x2', '\x2', '\x2', '\x33', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\x34', '\x37', '\x3', '\x2', '\x2', '\x2', '\x35', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x35', '\x36', '\x3', '\x2', '\x2', '\x2', '\x36', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\x37', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\x38', '<', '\n', '\x3', '\x2', '\x2', '\x39', ';', '\n', '\x4', 
		'\x2', '\x2', ':', '\x39', '\x3', '\x2', '\x2', '\x2', ';', '>', '\x3', 
		'\x2', '\x2', '\x2', '<', ':', '\x3', '\x2', '\x2', '\x2', '<', '=', '\x3', 
		'\x2', '\x2', '\x2', '=', '?', '\x3', '\x2', '\x2', '\x2', '>', '<', '\x3', 
		'\x2', '\x2', '\x2', '?', '@', '\a', '\f', '\x2', '\x2', '@', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x41', '\x43', '\t', '\x2', '\x2', '\x2', '\x42', 
		'\x41', '\x3', '\x2', '\x2', '\x2', '\x43', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\x44', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', 
		'\x2', '\x2', '\x2', '\x45', 'G', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'\x44', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '\f', '\x2', '\x2', 
		'H', '\t', '\x3', '\x2', '\x2', '\x2', 'I', 'K', '\t', '\x2', '\x2', '\x2', 
		'J', 'I', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\x3', '\x2', '\x2', '\x2', 
		'L', 'J', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\x3', '\x2', '\x2', '\x2', 
		'M', 'N', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\b', '\x5', '\x3', '\x2', 
		'O', '\v', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\a', '\xF', '\x2', '\x2', 
		'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\b', '\x6', '\x3', '\x2', 
		'S', '\r', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\v', '\x2', '\x2', '\x2', 
		'U', '\xF', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', 'k', '\x2', '\x2', 
		'W', 'X', '\a', 'p', '\x2', '\x2', 'X', 'Y', '\a', '\x65', '\x2', '\x2', 
		'Y', 'Z', '\a', 'n', '\x2', '\x2', 'Z', '[', '\a', 'w', '\x2', '\x2', 
		'[', '\\', '\a', '\x66', '\x2', '\x2', '\\', ']', '\a', 'g', '\x2', '\x2', 
		']', '\x11', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', '\x66', '\x2', 
		'\x2', '_', '`', '\a', 'g', '\x2', '\x2', '`', '\x61', '\a', 'h', '\x2', 
		'\x2', '\x61', '\x62', '\a', 'k', '\x2', '\x2', '\x62', '\x63', '\a', 
		'p', '\x2', '\x2', '\x63', '\x64', '\a', 'g', '\x2', '\x2', '\x64', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x65', '\x66', '\a', 'g', '\x2', '\x2', '\x66', 
		'g', '\a', 'p', '\x2', '\x2', 'g', 'h', '\a', '\x66', '\x2', '\x2', 'h', 
		'i', '\a', '\x66', '\x2', '\x2', 'i', 'j', '\a', 'g', '\x2', '\x2', 'j', 
		'k', '\a', 'h', '\x2', '\x2', 'k', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'l', 'm', '\a', '\x63', '\x2', '\x2', 'm', 'n', '\a', 'r', '\x2', '\x2', 
		'n', 'o', '\a', 'r', '\x2', '\x2', 'o', 'p', '\a', 'n', '\x2', '\x2', 
		'p', 'q', '\a', '{', '\x2', '\x2', 'q', '\x17', '\x3', '\x2', '\x2', '\x2', 
		'r', 'v', '\a', '\f', '\x2', '\x2', 's', 'u', '\t', '\x2', '\x2', '\x2', 
		't', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'x', '\x3', '\x2', '\x2', '\x2', 
		'v', 't', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 
		'w', 'y', '\x3', '\x2', '\x2', '\x2', 'x', 'v', '\x3', '\x2', '\x2', '\x2', 
		'y', 'z', '\n', '\x3', '\x2', '\x2', 'z', '{', '\x3', '\x2', '\x2', '\x2', 
		'{', '|', '\b', '\f', '\x4', '\x2', '|', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '}', '\x81', '\a', '$', '\x2', '\x2', '~', '\x80', '\n', '\x5', 
		'\x2', '\x2', '\x7F', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x83', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x7F', '\x3', '\x2', '\x2', '\x2', 
		'\x81', '\x82', '\x3', '\x2', '\x2', '\x2', '\x82', '\x84', '\x3', '\x2', 
		'\x2', '\x2', '\x83', '\x81', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', 
		'\a', '$', '\x2', '\x2', '\x85', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x87', '\a', '*', '\x2', '\x2', '\x87', '\x1D', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\a', '.', '\x2', '\x2', '\x89', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x8B', '\a', '+', '\x2', '\x2', '\x8B', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8E', '\t', '\x6', '\x2', '\x2', 
		'\x8D', '\x8F', '\t', '\a', '\x2', '\x2', '\x8E', '\x8D', '\x3', '\x2', 
		'\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', '\x8E', 
		'\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\x3', '\x2', '\x2', '\x2', 
		'\x91', '\xA3', '\x3', '\x2', '\x2', '\x2', '\x92', '\x93', '\a', '&', 
		'\x2', '\x2', '\x93', '\x95', '\t', '\x6', '\x2', '\x2', '\x94', '\x96', 
		'\t', '\a', '\x2', '\x2', '\x95', '\x94', '\x3', '\x2', '\x2', '\x2', 
		'\x96', '\x97', '\x3', '\x2', '\x2', '\x2', '\x97', '\x95', '\x3', '\x2', 
		'\x2', '\x2', '\x97', '\x98', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', 
		'\x3', '\x2', '\x2', '\x2', '\x99', '\xA3', '\a', '&', '\x2', '\x2', '\x9A', 
		'\x9B', '\a', '\'', '\x2', '\x2', '\x9B', '\x9D', '\t', '\x6', '\x2', 
		'\x2', '\x9C', '\x9E', '\t', '\a', '\x2', '\x2', '\x9D', '\x9C', '\x3', 
		'\x2', '\x2', '\x2', '\x9E', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9F', 
		'\x9D', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\x3', '\x2', '\x2', 
		'\x2', '\xA0', '\xA1', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA3', '\a', 
		'\'', '\x2', '\x2', '\xA2', '\x8C', '\x3', '\x2', '\x2', '\x2', '\xA2', 
		'\x92', '\x3', '\x2', '\x2', '\x2', '\xA2', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\xA3', '#', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\t', 
		'\b', '\x2', '\x2', '\xA5', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA6', 
		'\xA7', '\b', '\x12', '\x3', '\x2', '\xA7', '%', '\x3', '\x2', '\x2', 
		'\x2', '\xA8', '\xA9', '\v', '\x2', '\x2', '\x2', '\xA9', '\'', '\x3', 
		'\x2', '\x2', '\x2', '\xF', '\x2', '\x3', '+', '\x35', '<', '\x44', 'L', 
		'v', '\x81', '\x90', '\x97', '\x9F', '\xA2', '\x5', '\a', '\x3', '\x2', 
		'\b', '\x2', '\x2', '\x6', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MFSH
