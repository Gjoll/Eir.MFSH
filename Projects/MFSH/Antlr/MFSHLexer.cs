//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MFSHLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MFSH {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class MFSHLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		MSTART=1, LINE=2, BLANKLINE=3, CR=4, Err=5, MINCLUDE=6, MUSE=7, MMACRO=8, 
		MEND=9, MAPPLY=10, MMODEEND=11, MMODECONT=12, MSTRING=13, MOPAR=14, MCOMMA=15, 
		MCPAR=16, MPNAME=17, MWS=18, MCR=19, MErr=20;
	public const int
		MFSH=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "MFSH"
	};

	public static readonly string[] ruleNames = {
		"SPACE", "MSTART", "LINE", "BLANKLINE", "CR", "Err", "MINCLUDE", "MUSE", 
		"MMACRO", "MEND", "MAPPLY", "MMODEEND", "MMODECONT", "MSTRING", "MOPAR", 
		"MCOMMA", "MCPAR", "MPNAME", "MWS", "MCR", "MErr"
	};


	public MFSHLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public MFSHLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'include'", "'use'", "'macro'", "'end'", 
		"'apply'", null, null, null, "'('", "','", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "MSTART", "LINE", "BLANKLINE", "CR", "Err", "MINCLUDE", "MUSE", 
		"MMACRO", "MEND", "MAPPLY", "MMODEEND", "MMODECONT", "MSTRING", "MOPAR", 
		"MCOMMA", "MCPAR", "MPNAME", "MWS", "MCR", "MErr"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "MFSHLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static MFSHLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\xBC', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\a', '\x3', '\x32', '\n', '\x3', '\f', '\x3', '\xE', '\x3', '\x35', 
		'\v', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\a', '\x4', '<', '\n', '\x4', '\f', '\x4', '\xE', '\x4', '?', 
		'\v', '\x4', '\x3', '\x4', '\x3', '\x4', '\a', '\x4', '\x43', '\n', '\x4', 
		'\f', '\x4', '\xE', '\x4', '\x46', '\v', '\x4', '\x3', '\x4', '\x5', '\x4', 
		'I', '\n', '\x4', '\x3', '\x5', '\a', '\x5', 'L', '\n', '\x5', '\f', '\x5', 
		'\xE', '\x5', 'O', '\v', '\x5', '\x3', '\x5', '\x5', '\x5', 'R', '\n', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\a', '\r', 'x', '\n', 
		'\r', '\f', '\r', '\xE', '\r', '{', '\v', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\a', '\xE', '\x83', 
		'\n', '\xE', '\f', '\xE', '\xE', '\xE', '\x86', '\v', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', 
		'\a', '\xF', '\x8E', '\n', '\xF', '\f', '\xF', '\xE', '\xF', '\x91', '\v', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', 
		'\x13', '\x6', '\x13', '\x9D', '\n', '\x13', '\r', '\x13', '\xE', '\x13', 
		'\x9E', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x6', '\x13', '\xA4', 
		'\n', '\x13', '\r', '\x13', '\xE', '\x13', '\xA5', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x6', '\x13', '\xAC', '\n', '\x13', 
		'\r', '\x13', '\xE', '\x13', '\xAD', '\x3', '\x13', '\x5', '\x13', '\xB1', 
		'\n', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x2', '\x2', '\x17', '\x4', '\x2', '\x6', '\x3', '\b', 
		'\x4', '\n', '\x5', '\f', '\x6', '\xE', '\a', '\x10', '\b', '\x12', '\t', 
		'\x14', '\n', '\x16', '\v', '\x18', '\f', '\x1A', '\r', '\x1C', '\xE', 
		'\x1E', '\xF', ' ', '\x10', '\"', '\x11', '$', '\x12', '&', '\x13', '(', 
		'\x14', '*', '\x15', ',', '\x16', '\x4', '\x2', '\x3', '\n', '\x4', '\x2', 
		'\v', '\v', '\"', '\"', '\x5', '\x2', '\v', '\f', '\"', '\"', '%', '%', 
		'\x3', '\x2', '\f', '\f', '\x3', '\x3', '\f', '\f', '\x3', '\x2', '%', 
		'%', '\x3', '\x2', '$', '$', '\x4', '\x2', '\x43', '\\', '\x63', '|', 
		'\x5', '\x2', '\x32', ';', '\x43', '\\', '\x63', '|', '\x2', '\xC5', '\x2', 
		'\x6', '\x3', '\x2', '\x2', '\x2', '\x2', '\b', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\n', '\x3', '\x2', '\x2', '\x2', '\x2', '\f', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xE', '\x3', '\x2', '\x2', '\x2', '\x3', '\x10', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x12', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '\x3', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x18', '\x3', '\x2', '\x2', '\x2', '\x3', '\x1A', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x3', '$', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '&', '\x3', '\x2', '\x2', '\x2', '\x3', '(', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '*', '\x3', '\x2', '\x2', '\x2', '\x3', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x4', '.', '\x3', '\x2', '\x2', '\x2', '\x6', '\x33', 
		'\x3', '\x2', '\x2', '\x2', '\b', '=', '\x3', '\x2', '\x2', '\x2', '\n', 
		'M', '\x3', '\x2', '\x2', '\x2', '\f', 'S', '\x3', '\x2', '\x2', '\x2', 
		'\xE', 'W', '\x3', '\x2', '\x2', '\x2', '\x10', 'Y', '\x3', '\x2', '\x2', 
		'\x2', '\x12', '\x61', '\x3', '\x2', '\x2', '\x2', '\x14', '\x65', '\x3', 
		'\x2', '\x2', '\x2', '\x16', 'k', '\x3', '\x2', '\x2', '\x2', '\x18', 
		'o', '\x3', '\x2', '\x2', '\x2', '\x1A', 'u', '\x3', '\x2', '\x2', '\x2', 
		'\x1C', '\x80', '\x3', '\x2', '\x2', '\x2', '\x1E', '\x8B', '\x3', '\x2', 
		'\x2', '\x2', ' ', '\x94', '\x3', '\x2', '\x2', '\x2', '\"', '\x96', '\x3', 
		'\x2', '\x2', '\x2', '$', '\x98', '\x3', '\x2', '\x2', '\x2', '&', '\xB0', 
		'\x3', '\x2', '\x2', '\x2', '(', '\xB2', '\x3', '\x2', '\x2', '\x2', '*', 
		'\xB6', '\x3', '\x2', '\x2', '\x2', ',', '\xBA', '\x3', '\x2', '\x2', 
		'\x2', '.', '/', '\t', '\x2', '\x2', '\x2', '/', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x30', '\x32', '\x5', '\x4', '\x2', '\x2', '\x31', '\x30', 
		'\x3', '\x2', '\x2', '\x2', '\x32', '\x35', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x31', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\x3', '\x2', 
		'\x2', '\x2', '\x34', '\x36', '\x3', '\x2', '\x2', '\x2', '\x35', '\x33', 
		'\x3', '\x2', '\x2', '\x2', '\x36', '\x37', '\a', '%', '\x2', '\x2', '\x37', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\x38', '\x39', '\b', '\x3', '\x2', 
		'\x2', '\x39', '\a', '\x3', '\x2', '\x2', '\x2', ':', '<', '\x5', '\x4', 
		'\x2', '\x2', ';', ':', '\x3', '\x2', '\x2', '\x2', '<', '?', '\x3', '\x2', 
		'\x2', '\x2', '=', ';', '\x3', '\x2', '\x2', '\x2', '=', '>', '\x3', '\x2', 
		'\x2', '\x2', '>', '@', '\x3', '\x2', '\x2', '\x2', '?', '=', '\x3', '\x2', 
		'\x2', '\x2', '@', '\x44', '\n', '\x3', '\x2', '\x2', '\x41', '\x43', 
		'\n', '\x4', '\x2', '\x2', '\x42', '\x41', '\x3', '\x2', '\x2', '\x2', 
		'\x43', '\x46', '\x3', '\x2', '\x2', '\x2', '\x44', '\x42', '\x3', '\x2', 
		'\x2', '\x2', '\x44', '\x45', '\x3', '\x2', '\x2', '\x2', '\x45', 'H', 
		'\x3', '\x2', '\x2', '\x2', '\x46', '\x44', '\x3', '\x2', '\x2', '\x2', 
		'G', 'I', '\t', '\x5', '\x2', '\x2', 'H', 'G', '\x3', '\x2', '\x2', '\x2', 
		'I', '\t', '\x3', '\x2', '\x2', '\x2', 'J', 'L', '\x5', '\x4', '\x2', 
		'\x2', 'K', 'J', '\x3', '\x2', '\x2', '\x2', 'L', 'O', '\x3', '\x2', '\x2', 
		'\x2', 'M', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', 
		'\x2', 'N', 'Q', '\x3', '\x2', '\x2', '\x2', 'O', 'M', '\x3', '\x2', '\x2', 
		'\x2', 'P', 'R', '\t', '\x5', '\x2', '\x2', 'Q', 'P', '\x3', '\x2', '\x2', 
		'\x2', 'R', '\v', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\a', '\xF', '\x2', 
		'\x2', 'T', 'U', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\b', '\x6', '\x3', 
		'\x2', 'V', '\r', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\v', '\x2', '\x2', 
		'\x2', 'X', '\xF', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', 'k', '\x2', 
		'\x2', 'Z', '[', '\a', 'p', '\x2', '\x2', '[', '\\', '\a', '\x65', '\x2', 
		'\x2', '\\', ']', '\a', 'n', '\x2', '\x2', ']', '^', '\a', 'w', '\x2', 
		'\x2', '^', '_', '\a', '\x66', '\x2', '\x2', '_', '`', '\a', 'g', '\x2', 
		'\x2', '`', '\x11', '\x3', '\x2', '\x2', '\x2', '\x61', '\x62', '\a', 
		'w', '\x2', '\x2', '\x62', '\x63', '\a', 'u', '\x2', '\x2', '\x63', '\x64', 
		'\a', 'g', '\x2', '\x2', '\x64', '\x13', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'\x66', '\a', 'o', '\x2', '\x2', '\x66', 'g', '\a', '\x63', '\x2', '\x2', 
		'g', 'h', '\a', '\x65', '\x2', '\x2', 'h', 'i', '\a', 't', '\x2', '\x2', 
		'i', 'j', '\a', 'q', '\x2', '\x2', 'j', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\a', 'g', '\x2', '\x2', 'l', 'm', '\a', 'p', '\x2', '\x2', 
		'm', 'n', '\a', '\x66', '\x2', '\x2', 'n', '\x17', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'p', '\a', '\x63', '\x2', '\x2', 'p', 'q', '\a', 'r', '\x2', 
		'\x2', 'q', 'r', '\a', 'r', '\x2', '\x2', 'r', 's', '\a', 'n', '\x2', 
		'\x2', 's', 't', '\a', '{', '\x2', '\x2', 't', '\x19', '\x3', '\x2', '\x2', 
		'\x2', 'u', 'y', '\a', '\f', '\x2', '\x2', 'v', 'x', '\x5', '\x4', '\x2', 
		'\x2', 'w', 'v', '\x3', '\x2', '\x2', '\x2', 'x', '{', '\x3', '\x2', '\x2', 
		'\x2', 'y', 'w', '\x3', '\x2', '\x2', '\x2', 'y', 'z', '\x3', '\x2', '\x2', 
		'\x2', 'z', '|', '\x3', '\x2', '\x2', '\x2', '{', 'y', '\x3', '\x2', '\x2', 
		'\x2', '|', '}', '\n', '\x6', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', 
		'\x2', '~', '\x7F', '\b', '\r', '\x4', '\x2', '\x7F', '\x1B', '\x3', '\x2', 
		'\x2', '\x2', '\x80', '\x84', '\a', '\f', '\x2', '\x2', '\x81', '\x83', 
		'\x5', '\x4', '\x2', '\x2', '\x82', '\x81', '\x3', '\x2', '\x2', '\x2', 
		'\x83', '\x86', '\x3', '\x2', '\x2', '\x2', '\x84', '\x82', '\x3', '\x2', 
		'\x2', '\x2', '\x84', '\x85', '\x3', '\x2', '\x2', '\x2', '\x85', '\x87', 
		'\x3', '\x2', '\x2', '\x2', '\x86', '\x84', '\x3', '\x2', '\x2', '\x2', 
		'\x87', '\x88', '\a', '%', '\x2', '\x2', '\x88', '\x89', '\x3', '\x2', 
		'\x2', '\x2', '\x89', '\x8A', '\b', '\xE', '\x3', '\x2', '\x8A', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x8B', '\x8F', '\a', '$', '\x2', '\x2', '\x8C', 
		'\x8E', '\n', '\a', '\x2', '\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '\x91', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', 
		'\x92', '\x3', '\x2', '\x2', '\x2', '\x91', '\x8F', '\x3', '\x2', '\x2', 
		'\x2', '\x92', '\x93', '\a', '$', '\x2', '\x2', '\x93', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x95', '\a', '*', '\x2', '\x2', '\x95', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x96', '\x97', '\a', '.', '\x2', '\x2', 
		'\x97', '#', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\a', '+', '\x2', 
		'\x2', '\x99', '%', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x9C', '\t', 
		'\b', '\x2', '\x2', '\x9B', '\x9D', '\t', '\t', '\x2', '\x2', '\x9C', 
		'\x9B', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9E', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\x3', 
		'\x2', '\x2', '\x2', '\x9F', '\xB1', '\x3', '\x2', '\x2', '\x2', '\xA0', 
		'\xA1', '\a', '&', '\x2', '\x2', '\xA1', '\xA3', '\t', '\b', '\x2', '\x2', 
		'\xA2', '\xA4', '\t', '\t', '\x2', '\x2', '\xA3', '\xA2', '\x3', '\x2', 
		'\x2', '\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA3', 
		'\x3', '\x2', '\x2', '\x2', '\xA5', '\xA6', '\x3', '\x2', '\x2', '\x2', 
		'\xA6', '\xA7', '\x3', '\x2', '\x2', '\x2', '\xA7', '\xB1', '\a', '&', 
		'\x2', '\x2', '\xA8', '\xA9', '\a', '\'', '\x2', '\x2', '\xA9', '\xAB', 
		'\t', '\b', '\x2', '\x2', '\xAA', '\xAC', '\t', '\t', '\x2', '\x2', '\xAB', 
		'\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAD', '\x3', '\x2', '\x2', 
		'\x2', '\xAD', '\xAB', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', '\x3', 
		'\x2', '\x2', '\x2', '\xAE', '\xAF', '\x3', '\x2', '\x2', '\x2', '\xAF', 
		'\xB1', '\a', '\'', '\x2', '\x2', '\xB0', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\xB0', '\xA0', '\x3', '\x2', '\x2', '\x2', '\xB0', '\xA8', '\x3', 
		'\x2', '\x2', '\x2', '\xB1', '\'', '\x3', '\x2', '\x2', '\x2', '\xB2', 
		'\xB3', '\t', '\x3', '\x2', '\x2', '\xB3', '\xB4', '\x3', '\x2', '\x2', 
		'\x2', '\xB4', '\xB5', '\b', '\x14', '\x3', '\x2', '\xB5', ')', '\x3', 
		'\x2', '\x2', '\x2', '\xB6', '\xB7', '\a', '\xF', '\x2', '\x2', '\xB7', 
		'\xB8', '\x3', '\x2', '\x2', '\x2', '\xB8', '\xB9', '\b', '\x15', '\x3', 
		'\x2', '\xB9', '+', '\x3', '\x2', '\x2', '\x2', '\xBA', '\xBB', '\v', 
		'\x2', '\x2', '\x2', '\xBB', '-', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'\x2', '\x3', '\x33', '=', '\x44', 'H', 'M', 'Q', 'y', '\x84', '\x8F', 
		'\x9E', '\xA5', '\xAD', '\xB0', '\x5', '\a', '\x3', '\x2', '\b', '\x2', 
		'\x2', '\x6', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace MFSH
